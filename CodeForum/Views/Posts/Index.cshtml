@model CodeForum.Helpers.PagedList<Post>

@{
    var reports = ViewData["Reports"] as Dictionary<int, bool>;
    var topic = ViewData["Topic"] as Topic;
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="add-post-button text-center mb-4">
                <a asp-action="Create" asp-controller="Posts" asp-route-topicId="@ViewBag.TopicId" 
                   class="btn btn-primary btn-lg">
                    <i class="fas fa-plus-circle me-2"></i>Add New Post
                </a>
            </div>

            <div class="topic-header fade-in">
                @{
                var imagePath = string.IsNullOrEmpty(topic.Image) ?
                Url.Content("~/images/basic-image.jpg") :
                topic.Image;
                }
                <img src="@imagePath"
                     alt="Topic image"
                     onerror="this.src='@Url.Content("~/images/basic-image.jpg")'"
                     class="topic-image"/>
                <div class="topic-content">
                    <h2 class="topic-title">@topic.Title</h2>
                    <p class="topic-text">@topic.Content</p>
                    <div class="topic-meta">
                        <i class="fas fa-calendar me-2"></i>
                        Created on @topic.CreatedAt.ToString("MMMM dd, yyyy")
                    </div>
                    @if (topic.TopicTags != null)
                    {
                        <div class="tag-list">
                            @foreach (var topicTag in topic.TopicTags)
                            {
                                <span class="tag">@topicTag.Tag.Name</span>
                            }
                        </div>
                    }
                </div>
            </div>

            @foreach (var post in Model)
            {
                var likesDislikes = ViewData["LikesDislikes" + post.Id] as IEnumerable<LikeDislike>;

                <div class="post-card fade-in">
                    <div class="post-content">
                        <p class="post-text">@post.Content</p>
                        <div class="post-meta">
                            <span class="post-date">
                                <i class="fas fa-calendar me-2"></i>
                                @post.CreatedAt.ToString("MMMM dd, yyyy")
                            </span>
                            <span class="post-author">
                                <i class="fas fa-user me-2"></i>
                                @(post.User?.FirstName + " " + post.User?.LastName ?? "User is not defined")
                            </span>
                        </div>
                    </div>
                    <div class="post-footer">
                        <div class="d-flex justify-content-between align-items-center">
                            <div class="action-buttons">
                                <form asp-action="Delete" asp-route-id="@post.Id" method="post" class="d-inline-block me-2">
                                    <a class="btn btn-primary btn-sm" asp-action="Edit" asp-route-id="@post.Id">
                                        <i class="fas fa-edit me-1"></i>Edit
                                    </a>
                                    <button type="submit" class="btn btn-danger btn-sm">
                                        <i class="fas fa-trash me-1"></i>Delete
                                    </button>
                                </form>
                            </div>
                            <div class="report-button">
                                <form asp-action="ReportPost" asp-route-id="@post.Id" method="post">
                                    <button type="submit" class="btn btn-light">
                                        <i class="fas fa-flag @(reports[post.Id] ? "text-danger" : "")"></i> Report
                                    </button>
                                </form>
                            </div>
                            <div class="reaction-buttons">
                                <form asp-action="LikeDislikePost" asp-route-id="@post.Id" method="post" class="d-inline-block">
                                    <input type="hidden" name="isLike" value="true"/>
                                    <button type="submit" class="btn btn-light reaction-btn">
                                        <i class="fas fa-thumbs-up me-1"></i>
                                        <span class="reaction-count">@likesDislikes.Count(ld => ld.IsLike)</span>
                                    </button>
                                </form>
                                <form asp-action="LikeDislikePost" asp-route-id="@post.Id" method="post" class="d-inline-block">
                                    <input type="hidden" name="isLike" value="false"/>
                                    <button type="submit" class="btn btn-light reaction-btn">
                                        <i class="fas fa-thumbs-down me-1"></i>
                                        <span class="reaction-count">@likesDislikes.Count(ld => !ld.IsLike)</span>
                                    </button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            }

            <nav class="pagination-wrapper">
                <ul class="pagination justify-content-center">
                    @if (Model.CurrentPage > 1)
                    {
                        <li class="page-item">
                            <a class="page-link" href="?pageNumber=@(Model.CurrentPage - 1)&pageSize=@Model.PageSize">
                                <i class="fas fa-chevron-left"></i>
                            </a>
                        </li>
                    }

                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            <a class="page-link" href="?pageNumber=@i&pageSize=@Model.PageSize">@i</a>
                        </li>
                    }

                    @if (Model.CurrentPage < Model.TotalPages)
                    {
                        <li class="page-item">
                            <a class="page-link" href="?pageNumber=@(Model.CurrentPage + 1)&pageSize=@Model.PageSize">
                                <i class="fas fa-chevron-right"></i>
                            </a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    </div>
</div>

<style>
.topic-header {
    background: white;
    border-radius: 15px;
    box-shadow: 0 4px 6px rgba(0,0,0,0.1);
    overflow: hidden;
    margin-bottom: 2rem;
}

.topic-image {
    width: 100%;
    height: 180px;
    object-fit: cover;
    border-bottom: 1px solid rgba(0,0,0,0.1);
}

.topic-content {
    padding: 2rem;
}

.topic-title {
    color: var(--primary);
    margin-bottom: 1rem;
    font-weight: 600;
}

.topic-text {
    color: #000000;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
    line-height: 1.6;
    margin-bottom: 1.5rem;
    font-size: 1rem;
}

.topic-meta {
    color: #1e2125;
    font-size: 0.9rem;
    margin-bottom: 1rem;
}

.tag-list {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
}

.tag {
    background: rgba(var(--bs-primary-rgb), 0.1);
    color: var(--primary);
    padding: 0.25rem 0.75rem;
    border-radius: 15px;
    font-size: 0.875rem;
}

.post-card {
    background: white;
    border-radius: 15px;
    box-shadow: 0 4px 6px rgba(0,0,0,0.1);
    margin-bottom: 1.5rem;
    transition: transform var(--transition-speed) var(--transition-easing);
}

.post-card:hover {
    transform: translateY(-2px);
}

.post-content {
    padding: 1.5rem;
}

.post-text {
    color: #000000;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
    line-height: 1.6;
    margin-bottom: 1rem;
    font-size: 1rem;
}

.post-meta {
    display: flex;
    gap: 1rem;
    color: #1e2125;
    font-size: 0.9rem;
}

.post-footer {
    border-top: 1px solid rgba(0,0,0,0.1);
    padding: 1rem 1.5rem;
}

.action-buttons {
    display: flex;
    gap: 0.5rem;
}

.reaction-buttons {
    display: flex;
    gap: 0.5rem;
}

.reaction-btn {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 1rem;
}

.reaction-count {
    font-weight: 600;
}

.page-link {
    color: var(--primary);
    border: none;
    padding: 0.5rem 1rem;
    margin: 0 0.25rem;
    border-radius: 8px;
    transition: all 0.3s ease;
}

.page-link:hover {
    background: rgba(var(--bs-primary-rgb), 0.1);
    color: var(--primary);
}

.page-item.active .page-link {
    background: var(--primary);
    color: white;
}

.fade-in {
    animation: fadeIn 0.5s ease-in;
}
</style>